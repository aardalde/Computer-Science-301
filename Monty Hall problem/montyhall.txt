# Aaron Alden
# CSCI 301
# November 11, 2022
# montyhall.ipynb
# Program was made and simulated in VS Code using Jupyter Notebook

import numpy as np
from random import randint
import matplotlib.pyplot as plt

class Simulation:
    def __init__(self):
        num_iterations = -1
        while(num_iterations < 1):
            num_iterations = GetIntegerInput("How many iterations? ")
        self.num_iterations = num_iterations
        self.meanScores = []
        self.count = []

    def Simulate(self):
        for i in range(1, self.num_iterations):
            scores = []

            for _ in range(1, i):
                scores.append(self.TakeTurn())

            self.meanScores.append(np.mean(scores))
            self.count.append(i)

        self.ShowResults()

    def TakeTurn(self):
        actual = randint(0, 2)
        guess = randint(0, 2)

        if actual == guess:
            return 1
        else:
            return 0

    def ShowResults(self):
        plt.title('Monty Hall simulation without switching doors')
        plt.xlabel('Number of iterations')
        plt.ylabel('Percent win rate in decimal form')
        plt.plot(self.count, self.meanScores)
        plt.show()

def GetIntegerInput(message):
    while True:
        try:
            print("")
            choice = int(input(message))
        except ValueError:
            print("Enter an integer: ")
            continue
        else:
            return choice

def Menu():
    print("")
    print("    Monty Hall Problem    ")
    print("1. Play without switching")
    print("2. Exit program")

    menuOptions = [1, 2]

    choice = -1
    while(choice not in menuOptions):
        choice = GetIntegerInput("Enter choice: ")

    if choice == 1:
        simulation = Simulation()
    elif choice == 2:
        exit()

    simulation.Simulate()

    Menu()

if __name__ == "__main__":
    Menu()